Autorid on Karl-Magnus Laikoja ja Kasper Kaljuste

Programmiks on kalender. Sellega saab vaadata hetke aega ja kuupäeva ning lisada erinevaid sündmusi.

Programmi käivitamisel kuvatakse programmi kasutamise juhised, milleks on erinevad ühesõnalised käsklused.

Võimalik on väljastada kuupäeva, kella, lisada sündmuseid, salvestada lisatud sündmused, väljastada lisatud sündmused ja sündmuseid muuta ja kustutada.

Lisaks on kasutajal võimalik sündmuse tegemisel lisada sellele meeldetuletus ja lisadetailid, kui selleks soovi on.
Meeldetuletuse lisamine loob taimeri, ning kui praegune aeg ühtib meeldetuletuse ajaga, siis väljastab meeldetuletuse.


KLASSID

KALENDER - Peaklass, siin toimub põhiline loogika: sündmustega asjatamine, suhtlus kasutajaga, failist lugemine ja sinna kirjutamine

KELL - võtab hetkeaja ja vormistab selle kujule tunnid:minutid

KUUPÄEV - sama mis kell, aga vorming on kujul nädalapäev, päev kuu aasta

MEELDETULETUS - sündmuse laiendus, millel on lisaks meeldetuletuse aeg

EVENT - sündmus, getterid ja setterid, compareTo funktsioon (võrdleb aegu), detailide lisamine ja kustutamine, võimaldab suvalise aja päeva jooksul valida sündmuse alguseks


Esialgu tegime githubi repositooriumi ja rääkisime omavahel üldiselt, kes mida teeb ning mis funktsioonid võiks programmil olla.

Kasper Kaljuste - Kalendri state machine loogika, failist lugemine ja faili kirjutamine, kella vorming ja väljastus

Karl-Magnus Laikoja - Sündmuste tegemine, muutmine ja võrdlemine omavahel, palju bug fixe, meeldetuletused ja erinevad väiksemad edasiarendused

Ajakulusid eriti ei jälginud, vaid vabadel hetkedel tegime. Kui midagi silma jäi või mingi idee tuli, siis kirjutasime üksteisele.

TEGEMISE MURED:

Alguses proovisime kasutada kahte threadi, üks aja jaoks ja teine muu jaoks, kuid see oli liiga keeruline.

Kui meeldetuletuse aeg on juba ära olnud, siis kuidas seda mitte kuvada. Selleks pidi neid omavahel võrdlema, aga erinevaid formaate oli keeruline võrrelda. Nt Apr või 04 võrrelda aprilliga.

Saime kõik asjad tehtud, mis tahtsime, niiet hinnang tööle on hea.

Testisime korduvalt programmi tööd erinevaid sisestusi ja sündmusi kasutades.

